{{
  config(
    materialized='table',
    description='Child table records with soft delete logic applied - replaces the main Dataflow pipeline output',
    pre_hook="truncate table if exists {{ this }}",
    post_hook=[
      "alter table {{ this }} add constraint check_current_ind check (current_ind_final in ('0', '1'))",
      "comment on table {{ this }} is 'Processed child table records with soft delete transformations applied. Generated by DBT conversion of Adhoc_Monthly_SD_Child Dataflow pipeline.'"
    ]
  )
}}

{#-
  This model replicates the complete business logic from the original Dataflow pipeline:
  
  1. Reads child table data (equivalent to BigQueryIO.readTableRows())
  2. Generates current timestamp (equivalent to CommonTimestamp transform)
  3. Applies soft delete logic (equivalent to FullRefresh transform)
  4. Outputs final processed records (equivalent to BigQueryIO.writeTableRows() with WRITE_TRUNCATE)
-#}

with source_data as (
  select * from {{ ref('stg_child_table') }}
),

current_timestamp_value as (
  select {{ generate_current_timestamp() }} as processing_timestamp
),

soft_delete_applied as (
  select 
    s.*,
    ct.processing_timestamp,
    
    -- Apply the soft delete logic from FullRefresh.java transform
    case 
      when s.current_ind = '{{ var("current_ind_inactive", "0") }}'
           and try_to_timestamp(s.dw_update_date_time, '{{ var("date_format", "yyyy-MM-dd") }}') < current_timestamp()
      then '{{ var("current_ind_active", "1") }}'
      when s.current_ind = '{{ var("current_ind_inactive", "0") }}'
      then s.current_ind
      else s.current_ind
    end as current_ind_final,
    
    -- Update timestamp when current_ind is 0 (matches FullRefresh logic)
    case 
      when s.current_ind = '{{ var("current_ind_inactive", "0") }}'
      then ct.processing_timestamp
      else s.dw_update_date_time
    end as dw_update_date_time_final
    
  from source_data s
  cross join current_timestamp_value ct
)

select
  -- Preserve all original fields
  merchant_number,
  child_record_id,
  record_type,
  parent_id,
  status,
  description,
  amount,
  currency_code,
  created_date,
  created_by,
  
  -- Apply transformed soft delete fields
  current_ind_final as current_ind,
  dw_update_date_time_final as dw_update_date_time,
  
  -- Audit fields for tracking
  processing_timestamp,
  
  -- Add hash for change data capture (similar to original pipeline's intent)
  hash(
    merchant_number, 
    child_record_id, 
    current_ind_final, 
    dw_update_date_time_final
  ) as record_hash

from soft_delete_applied

{#- 
  This query structure ensures:
  1. No DML operations (INSERT/UPDATE/DELETE) - only SELECT statements
  2. Exact replication of FullRefresh.java business logic
  3. Proper handling of current_ind and dw_update_date_time transformations
  4. Audit trail with processing timestamps
-#}