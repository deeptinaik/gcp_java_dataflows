package com.globalpayments.batch.pipeline.utils;

import java.util.regex.Pattern;

public class Constants {
    private Constants(){}

    public static final String AMEX_UK_BASE_QUERY = "WITH cte_dtl_n_dt2_today_data AS ( SELECT DTL.participant_industry_se_number AS key, DTL.dtl_record_type AS dtl_record_type, DTL.seller_id AS merchant_number, DTL.seller_legal_name AS seller_legal_name, DTL.seller_dba_name AS seller_dba_name, DTL.seller_business_registration_number_rfc AS seller_business_registration_number_rfc, DTL.seller_mcc AS seller_mcc, DTL.seller_street_address_1 AS seller_street_address_1, DTL.seller_city_name AS seller_city_name, DTL.seller_region_code_state AS seller_region_code_state, DTL.seller_postal_code AS seller_postal_code, DTL.seller_country_code AS seller_country_code, DTL.seller_business_phone_number AS seller_business_phone_number, DTL.seller_email_address AS seller_email_address, DTL.seller_url AS seller_url, DTL.seller_currency_code AS seller_currency_code, DTL.authorized_signer_first_name AS authorized_signer_first_name, DTL.authorized_signer_last_name AS authorized_signer_last_name, DTL.language AS language, DTL.jcb_indicator AS jcb_indicator, DTL.significant_beneficial_owner_1_first_name AS significant_beneficial_owner_1_first_name, DTL.significant_beneficial_owner_1_last_name AS significant_beneficial_owner_1_last_name, DTL.significant_beneficial_owner_1_identification_number_ssn AS significant_beneficial_owner_1_identification_number_ssn, DTL.significant_beneficial_owner_1_date_of_birth AS significant_beneficial_owner_1_date_of_birth, DTL.significant_beneficial_owner_1_street_address_1 AS significant_beneficial_owner_1_street_address_1, DTL.significant_beneficial_owner_1_city_name AS significant_beneficial_owner_1_city_name, DTL.significant_beneficial_owner_1_region_code_state AS significant_beneficial_owner_1_region_code_state, DTL.significant_beneficial_owner_1_postal_code AS significant_beneficial_owner_1_postal_code, DTL.significant_beneficial_owner_1_country_code AS significant_beneficial_owner_1_country_code, DTL.marketing_indicator AS marketing_indicator, DTL.ownership_type_indicator AS ownership_type_indicator, DTL.seller_transacting_indicator AS seller_transacting_indicator, DTL.se_detail_status_code AS se_detail_status_code, DTL.se_detail_status_change_date AS se_detail_status_change_date, DTL.seller_street_address_2 AS seller_street_address_2, DTL.seller_street_address_3 AS seller_street_address_3, DTL.seller_street_address_4 AS seller_street_address_4, DTL.seller_street_address_5 AS seller_street_address_5, DTL.authorized_signer_title AS authorized_signer_title, DTL.significant_beneficial_owner_1_street_address_2 AS significant_beneficial_owner_1_street_address_2, DTL.significant_beneficial_owner_1_street_address_3 AS significant_beneficial_owner_1_street_address_3, DTL.significant_beneficial_owner_1_street_address_4 AS significant_beneficial_owner_1_street_address_4, DTL.significant_beneficial_owner_1_street_address_5 AS significant_beneficial_owner_1_street_address_5, DTL.filler10 AS filler10, DTL.client_defined AS client_defined, DTL.record_type_error_flag AS dtl_record_type_error_flag, DTL.record_number_error_flag AS dtl_record_number_error_flag, DTL.seller_id_error_flag AS dtl_seller_id_error_flag, DTL.seller_legal_name_error_flag AS seller_legal_name_error_flag, DTL.seller_dba_name_error_flag AS seller_dba_name_error_flag, DTL.seller_business_registration_number_rfc_error_flag AS seller_business_registration_number_rfc_error_flag, DTL.seller_mcc_error_flag AS seller_mcc_error_flag, DTL.seller_street_address_error_flag AS seller_street_address_error_flag, DTL.seller_city_name_error_flag AS seller_city_name_error_flag, DTL.seller_state_location_region_code_error_flag AS seller_state_location_region_code_error_flag, DTL.seller_postal_code_location_postal_code_error_flag AS seller_postal_code_location_postal_code_error_flag, DTL.seller_country_code_error_flag AS seller_country_code_error_flag, DTL.seller_business_phone_number_error_flag AS seller_business_phone_number_error_flag, DTL.seller_email_address_error_flag AS seller_email_address_error_flag, DTL.seller_url_error_flag AS seller_url_error_flag, DTL.seller_currency_code_error_flag AS seller_currency_code_error_flag, DTL.authorized_signer_first_name_error_flag AS authorized_signer_first_name_error_flag, DTL.authorized_signer_last_name_error_flag AS authorized_signer_last_name_error_flag, DTL.language_error_flag AS language_error_flag, DTL.jcb_error_flag AS jcb_error_flag, DTL.significant_beneficial_owner_1_first_name_error_flag AS significant_beneficial_owner_1_first_name_error_flag, DTL.significant_beneficial_owner_1_last_name_error_flag AS significant_beneficial_owner_1_last_name_error_flag, DTL.significant_beneficial_owner_1_identification_number_ssn_error_flag AS significant_beneficial_owner_1_identification_number_ssn_error_flag, DTL.significant_beneficial_owner_1_date_of_birth_error_flag AS significant_beneficial_owner_1_date_of_birth_error_flag, DTL.significant_beneficial_owner_1_street_address_1_error_flag AS significant_beneficial_owner_1_street_address_1_error_flag, DTL.significant_beneficial_owner_1_city_name_error_flag AS significant_beneficial_owner_1_city_name_error_flag, DTL.significant_beneficial_owner_1_region_code_state_error_flag AS significant_beneficial_owner_1_region_code_state_error_flag, DTL.significant_beneficial_owner_1_postal_code_error_flag AS significant_beneficial_owner_1_postal_code_error_flag, DTL.significant_beneficial_owner_1_country_code_error_flag AS significant_beneficial_owner_1_country_code_error_flag, DTL.marketing_indicator_error_flag AS marketing_indicator_error_flag, DTL.ownership_type_error_flag AS ownership_type_error_flag, DTL.seller_transacting_indicator_error_flag AS seller_transacting_indicator_error_flag, DTL.se_detail_status_code_error_flag AS se_detail_status_code_error_flag, DTL.se_detail_status_change_date_error_flag AS se_detail_status_change_date_error_flag, DTL.seller_street_address_2_error_flag AS seller_street_address_2_error_flag, DTL.seller_street_address_3_error_flag AS seller_street_address_3_error_flag, DTL.seller_street_address_4_error_flag AS seller_street_address_4_error_flag, DTL.seller_street_address_5_error_flag AS seller_street_address_5_error_flag, DTL.authorized_signer_title_error_flag AS authorized_signer_title_error_flag, DTL.significant_beneficial_owner_1_street_address_2_error_flag AS significant_beneficial_owner_1_street_address_2_error_flag, DTL.significant_beneficial_owner_1_street_address_3_error_flag AS significant_beneficial_owner_1_street_address_3_error_flag, DTL.significant_beneficial_owner_1_street_address_4_error_flag AS significant_beneficial_owner_1_street_address_4_error_flag, DTL.significant_beneficial_owner_1_street_address_5_error_flag AS significant_beneficial_owner_1_street_address_5_error_flag, DTL.client_defined_error_flag AS client_defined_error_flag, DTL.filler11 AS filler11, DTL.record_reject_identifier AS record_reject_identifier, DT2.record_type AS dt2_record_type, DT2.authorized_signer_identification_number AS authorized_signer_identification_number, DT2.authorized_signer_date_of_birth AS authorized_signer_date_of_birth, DT2.authorized_signer_street_address_1 AS authorized_signer_street_address_1, DT2.authorized_signer_street_address_2 AS authorized_signer_street_address_2, DT2.authorized_signer_street_address_3 AS authorized_signer_street_address_3, DT2.authorized_signer_street_address_4 AS authorized_signer_street_address_4, DT2.authorized_signer_street_address_5 AS authorized_signer_street_address_5, DT2.authorized_signer_city_name AS authorized_signer_city_name, DT2.authorized_signer_region_code AS authorized_signer_region_code, DT2.authorized_signer_postal_code AS authorized_signer_postal_code, DT2.authorized_signer_country_code AS authorized_signer_country_code, DT2.significant_beneficial_owner_2_first_name AS significant_beneficial_owner_2_first_name, DT2.significant_beneficial_owner_2_last_name AS significant_beneficial_owner_2_last_name, DT2.significant_beneficial_owner_2_identification_number AS significant_beneficial_owner_2_identification_number, DT2.significant_beneficial_owner_2_date_of_birth AS significant_beneficial_owner_2_date_of_birth, DT2.significant_beneficial_owner_2_street_address_1 AS significant_beneficial_owner_2_street_address_1, DT2.significant_beneficial_owner_2_street_address_2 AS significant_beneficial_owner_2_street_address_2, DT2.significant_beneficial_owner_2_street_address_3 AS significant_beneficial_owner_2_street_address_3, DT2.significant_beneficial_owner_2_street_address_4 AS significant_beneficial_owner_2_street_address_4, DT2.significant_beneficial_owner_2_street_address_5 AS significant_beneficial_owner_2_street_address_5, DT2.significant_beneficial_owner_2_city_name AS significant_beneficial_owner_2_city_name, DT2.significant_beneficial_owner_2_region_code_state AS significant_beneficial_owner_2_region_code_state, DT2.significant_beneficial_owner_2_postal_code AS significant_beneficial_owner_2_postal_code, DT2.significant_beneficial_owner_2_country_code AS significant_beneficial_owner_2_country_code, DT2.significant_beneficial_owner_3_first_name AS significant_beneficial_owner_3_first_name, DT2.significant_beneficial_owner_3_last_name AS significant_beneficial_owner_3_last_name, DT2.significant_beneficial_owner_3_identification_number AS significant_beneficial_owner_3_identification_number, DT2.significant_beneficial_owner_3_date_of_birth AS significant_beneficial_owner_3_date_of_birth, DT2.significant_beneficial_owner_3_street_address_1 AS significant_beneficial_owner_3_street_address_1, DT2.significant_beneficial_owner_3_street_address_2 AS significant_beneficial_owner_3_street_address_2, DT2.significant_beneficial_owner_3_street_address_3 AS significant_beneficial_owner_3_street_address_3, DT2.significant_beneficial_owner_3_street_address_4 AS significant_beneficial_owner_3_street_address_4, DT2.significant_beneficial_owner_3_street_address_5 AS significant_beneficial_owner_3_street_address_5, DT2.significant_beneficial_owner_3_city_name AS significant_beneficial_owner_3_city_name, DT2.significant_beneficial_owner_3_region_code_state AS significant_beneficial_owner_3_region_code_state, DT2.significant_beneifical_owner_3_postal_code AS significant_beneifical_owner_3_postal_code, DT2.significant_beneficial_owner_3_country_code AS significant_beneficial_owner_3_country_code, DT2.significant_beneficial_owner_4_first_name AS significant_beneficial_owner_4_first_name, DT2.significant_beneficial_owner_4_last_name AS significant_beneficial_owner_4_last_name, DT2.significant_beneficial_owner_4_identification_number AS significant_beneficial_owner_4_identification_number, DT2.significant_beneficial_owner_4_date_of_birth AS significant_beneficial_owner_4_date_of_birth, DT2.significant_beneficial_owner_4_street_address_1 AS significant_beneficial_owner_4_street_address_1, DT2.significant_beneficial_owner_4_street_address_2 AS significant_beneficial_owner_4_street_address_2, DT2.significant_beneficial_owner_4_street_address_3 AS significant_beneficial_owner_4_street_address_3, DT2.significant_beneficial_owner_4_street_address_4 AS significant_beneficial_owner_4_street_address_4, DT2.significant_beneficial_owner_4_street_address_5 AS significant_beneficial_owner_4_street_address_5, DT2.significant_beneficial_owner_4_city_name AS significant_beneficial_owner_4_city_name, DT2.significant_beneficial_owner_4_region_code_state AS significant_beneficial_owner_4_region_code_state, DT2.significant_beneficial_owner_4_postal_code AS significant_beneficial_owner_4_postal_code, DT2.significant_beneficial_owner_4_country_code AS significant_beneficial_owner_4_country_code, DT2.sales_channel_indicator AS sales_channel_indicator, DT2.sales_channel_name AS sales_channel_name, DT2.sales_representative_id AS sales_representative_id, DT2.iso_registration_number AS iso_registration_number, DT2.filler1 AS dt2_filler1, DT2.sellers_status AS sellers_status, DT2.sellers_start_date AS sellers_start_date, DT2.sellers_termination_date AS sellers_termination_date, DT2.sellers_charge_volume AS sellers_charge_volume, DT2.sellers_transaction_count AS sellers_transaction_count, DT2.sellers_chargeback_count AS sellers_chargeback_count, DT2.sellers_chargeback_amount AS sellers_chargeback_amount, DT2.filler2 AS dt2_filler2, DT2.record_type_error_flag AS dt2_record_type_error_flag, DT2.record_number_error_flag AS dt2_record_number_error_flag, DT2.seller_id_error_flag AS dt2_seller_id_error_flag, DT2.authorized_signer_identification_number_error_flag AS authorized_signer_identification_number_error_flag, DT2.authorized_signer_date_of_birth_error_flag AS authorized_signer_date_of_birth_error_flag, DT2.authorized_signer_street_address_1_error_flag AS authorized_signer_street_address_1_error_flag, DT2.authorized_signer_street_address_2_error_flag AS authorized_signer_street_address_2_error_flag, DT2.authorized_signer_street_address_3_error_flag AS authorized_signer_street_address_3_error_flag, DT2.authorized_signer_street_address_4_error_flag AS authorized_signer_street_address_4_error_flag, DT2.authorized_signer_street_address_5_error_flag AS authorized_signer_street_address_5_error_flag, DT2.authorized_signer_city_name_error_flag AS authorized_signer_city_name_error_flag, DT2.authorized_signer_region_code_error_flag AS authorized_signer_region_code_error_flag, DT2.authorized_signer_postal_code_error_flag AS authorized_signer_postal_code_error_flag, DT2.authorized_signer_country_code_error_flag AS authorized_signer_country_code_error_flag, DT2.significant_beneficial_owner_2_first_name_error_flag AS significant_beneficial_owner_2_first_name_error_flag, DT2.significant_beneficial_owner_2_last_name_error_flag AS significant_beneficial_owner_2_last_name_error_flag, DT2.significant_beneficial_owner_2_identification_number_error_flag AS significant_beneficial_owner_2_identification_number_error_flag, DT2.significant_beneficial_owner_2_date_of_birth_error_flag AS significant_beneficial_owner_2_date_of_birth_error_flag, DT2.significant_benifical_owner_2_street_address_1_error_flag AS significant_benifical_owner_2_street_address_1_error_flag, DT2.significant_beneficial_owner_2_street_address_2_error_flag AS significant_beneficial_owner_2_street_address_2_error_flag, DT2.significant_beneficial_owner_2_street_address_3_error_flag AS significant_beneficial_owner_2_street_address_3_error_flag, DT2.significant_beneficial_owner_2_street_address_4_error_flag AS significant_beneficial_owner_2_street_address_4_error_flag, DT2.significant_beneficial_owner_2_street_address_5_error_flag AS significant_beneficial_owner_2_street_address_5_error_flag, DT2.significant_beneficial_owner_2_city_name_error_flag AS significant_beneficial_owner_2_city_name_error_flag, DT2.significantbeneficial_owner_2_region_code_error_flag AS significantbeneficial_owner_2_region_code_error_flag, DT2.significant_beneficial_owner_2_postal_code_error_flag AS significant_beneficial_owner_2_postal_code_error_flag, DT2.significant_beneficial_owner_2_country_code_error_flag AS significant_beneficial_owner_2_country_code_error_flag, DT2.significant_beneficial_owner_3_first_name_error_flag AS significant_beneficial_owner_3_first_name_error_flag, DT2.significant_beneficial_owner_3_last_name_error_flag AS significant_beneficial_owner_3_last_name_error_flag, DT2.significant_beneficial_owner_3_identification_number_error_flag AS significant_beneficial_owner_3_identification_number_error_flag, DT2.significant_beneficial_owner_3_date_of_birth_error_flag AS significant_beneficial_owner_3_date_of_birth_error_flag, DT2.significant_beneficial_owner_3_street_address_1_error_flag AS significant_beneficial_owner_3_street_address_1_error_flag, DT2.significant_beneficial_owner_3_street_address_2_error_flag AS significant_beneficial_owner_3_street_address_2_error_flag, DT2.significant_beneficial_owner_3_street_address_3_error_flag AS significant_beneficial_owner_3_street_address_3_error_flag, DT2.significant_beneficial_owner_3_street_address_4_error_flag AS significant_beneficial_owner_3_street_address_4_error_flag, DT2.significant_beneficial_owner_3_street_address_5_error_flag AS significant_beneficial_owner_3_street_address_5_error_flag, DT2.significant_beneficial_owner_3_city_name_error_flag AS significant_beneficial_owner_3_city_name_error_flag, DT2.significant_beneficial_owner_3_region_code_error_flag AS significant_beneficial_owner_3_region_code_error_flag, DT2.significant_beneficial_owner_3_postal_code_error_flag AS significant_beneficial_owner_3_postal_code_error_flag, DT2.significant_beneficial_owner_3_country_code_error_flag AS significant_beneficial_owner_3_country_code_error_flag, DT2.significant_beneficial_owner_4_first_name_error_flag AS significant_beneficial_owner_4_first_name_error_flag, DT2.significant_beneficialowner_4_last_name_error_flag AS significant_beneficialowner_4_last_name_error_flag, DT2.significant_beneficial_owner_4_identification_number_error_flag AS significant_beneficial_owner_4_identification_number_error_flag, DT2.significant_beneficial_owner_4_date_of_birth_error_flag AS significant_beneficial_owner_4_date_of_birth_error_flag, DT2.significant_beneficial_owner_4_street_address_1_error_flag AS significant_beneficial_owner_4_street_address_1_error_flag, DT2.significant_beneficial_owner_4_street_address_2_error_flag AS significant_beneficial_owner_4_street_address_2_error_flag, DT2.significant_beneficial_owner_4_street_address_3_error_flag AS significant_beneficial_owner_4_street_address_3_error_flag, DT2.significant_beneficial_owner_4_street_address_4_error_flag AS significant_beneficial_owner_4_street_address_4_error_flag, DT2.significant_beneficial_owner_4_street_address_5_error_flag AS significant_beneficial_owner_4_street_address_5_error_flag, DT2.significant_beneficial_owner_4_city_name_error_flag AS significant_beneficial_owner_4_city_name_error_flag, DT2.significant_beneficial_owner_4_region_code_error_flag AS significant_beneficial_owner_4_region_code_error_flag, DT2.significant_beneficial_owner_4_postal_code_error_flag AS significant_beneficial_owner_4_postal_code_error_flag, DT2.significant_beneficial_owner_4_country_code_error_flag AS significant_beneficial_owner_4_country_code_error_flag, DT2.sales_channel_indicator_error_flag AS sales_channel_indicator_error_flag, DT2.sales_channel_name_error_flag AS sales_channel_name_error_flag, DT2.sales_representative_id_error_flag AS sales_representative_id_error_flag, DT2.iso_registration_number_error_flag AS iso_registration_number_error_flag, DT2.filler3 AS dt2_filler3, DT2.sellers_status_error_flag AS sellers_status_error_flag, DT2.sellers_start_date_error_flag AS sellers_start_date_error_flag, DT2.sellers_termination_date_error_flag AS sellers_termination_date_error_flag, DT2.sellers_charge_volume_error_flag AS sellers_charge_volume_error_flag, DT2.sellers_transaction_count_error_flag AS sellers_transaction_count_error_flag, DT2.sellers_chargeback_count_error_flag AS sellers_chargeback_count_error_flag, DT2.sellers_chargeback_amount_error_flag AS sellers_chargeback_amount_error_flag, DT2.filler4 AS dt2_filler4 FROM ( SELECT * FROM transformed_layer.amex_gsmf_dtl_uk WHERE SAFE_CAST(etlbatchid AS STRING) = '$etlbatchid') DTL JOIN ( SELECT * FROM transformed_layer.amex_gsmf_dtl2_uk WHERE SAFE_CAST(etlbatchid AS STRING) = '$etlbatchid') DT2 ON LTRIM(TRIM(DTL.seller_id), '0') = LTRIM(TRIM(DT2.seller_id), '0')), cte_DTL_DT2_yesterday_response_data AS ( WITH cte_moss_data AS ( SELECT DISTINCT merchantid AS merchantid, EI.infovalue AS infoValue FROM ( SELECT merchantid, orderdid FROM transformed_layer.m2x_loc_locations) LL INNER JOIN ( SELECT orderdid, contractdid FROM transformed_layer.m2x_con_contracts) CC ON LL.orderdid = CC.orderdid INNER JOIN ( SELECT contractdid, infovalue, extrainfoid FROM transformed_layer.m2x_con_extrainfos) EI ON EI.contractdid = CC.contractdid WHERE EI.extrainfoid = 102024 AND TRIM(LL.merchantid) != '' AND LL.merchantid IS NOT NULL ), cte_dtl_dt2_response_data AS( WITH uk_mmwebsq_web_temp AS ( SELECT corporate, region, principal, associate, chain, merchant_number, seqn, address, actual_update_date_time, current_ind, file_name FROM ( SELECT corporate, region, principal, associate, chain, merchant_number, seqn, address, actual_update_date_time, current_ind, file_name, row_number () OVER (PARTITION BY web.corporate, web.region, web.principal, web.associate, web.chain, web.merchant_number ORDER BY seqn) AS seqn_num FROM transformed_layer.uk_mmwebsq_web web WHERE web.current_ind = '0' AND web.corporate = '052')x WHERE x.seqn_num=1 ) SELECT DISTINCT master.merchant_number AS merchant_number, master.company_name AS company_name, master.merchant_status AS merchant_status, ai.dba_name AS dba_name, REPLACE(ai.address1, '|', '') AS ai_address1, REPLACE(ai.address2, '|', '') AS ai_address2, REPLACE(ai.address3, '|', '') AS ai_address3, ai.city AS ai_city, ai.postal_cd AS ai_postal_cd, ai.state_ctry AS num_country_code, idx.standard_sic AS standard_sic, officer.telephone_nbr1 AS telephone_nbr1, officer.service_rep AS service_rep, ui.cd_c4 AS cd_c4, ui.cd_b4 AS cd_b4, email.address AS email_address, email.seqn AS email_seqn, web.address AS web_address, web.seqn AS web_seqn, REGEXP_REPLACE(owner.name,  r'[^a-zA-Z\\s]', '') AS name, owner.primary_id AS primary_id, REPLACE(owner.address1, '|', '') AS owner_address1, REPLACE(owner.address2, '|', '') AS owner_address2, REPLACE(owner.address3, '|', '') AS owner_address3, owner.city AS owner_city, owner.postal_code AS owner_postal_code, owner.state_ctry AS state_ctry, csl.pre_service_level AS pre_service_level, csl.service_lvl_chng_date AS service_lvl_chng_date, csl.service_level AS service_level, csl.card_typ AS card_typ, csl.current_ind AS csl_current_ind, csl.dw_update_date_time AS csl_dw_update_date_time, fraud.usr_def_fld2 AS usr_def_fld2, idxint.dt_closed AS dt_closed, idxint.dt_opened AS dt_opened, plate.amex_optblue_se_num AS amex_optblue_se_num FROM ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, company_name, dw_active_flg, current_ind, merchant_status, file_name, merch_master_activity_change_date FROM transformed_layer.uk_mmmstsq_master WHERE current_ind = '0' AND merchant_status NOT IN ('P', 'D') AND merchant_number IS NOT NULL AND merchant_number != '' AND dw_active_flg = '1' AND corporate = '052') master LEFT JOIN ( SELECT merchant_number, corporate, region, principal, associate, chain, current_ind, dba_name, address1, address2, address3, city, postal_cd, outlet, file_name, address_change_date, state_ctry FROM ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, dba_name, REPLACE(address1, '|', '') AS address1, REPLACE(address2, '|', '') AS address2, REPLACE(address3, '|', '') AS address3, city, postal_cd, outlet, file_name, address_change_date, state_ctry FROM ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, dba_name, (CASE WHEN (REGEXP_REPLACE( UPPER(address1), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) = '') THEN NULL WHEN REGEXP_CONTAINS(UPPER(address1), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?') THEN REGEXP_REPLACE( UPPER(address1), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) ELSE UPPER(address1) END ) AS address1, (CASE WHEN (REGEXP_REPLACE( UPPER(address2), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) = '') THEN NULL WHEN REGEXP_CONTAINS(UPPER(address2), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?') THEN REGEXP_REPLACE( UPPER(address2), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) ELSE UPPER(address2) END ) AS address2, (CASE WHEN (REGEXP_REPLACE( UPPER(address3), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) = '')  THEN NULL WHEN REGEXP_CONTAINS(UPPER(address3), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?') THEN REGEXP_REPLACE( UPPER(address3), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) ELSE UPPER(address3) END ) AS address3, city, postal_cd, outlet, file_name, state_ctry, address_change_date, FROM transformed_layer.uk_mmaddeu_address_index WHERE CAST(outlet AS int64) = 0 AND current_ind = '0' AND corporate = '052') ind )) ai ON master.merchant_number = ai.merchant_number AND master.corporate = ai.corporate AND master.region = ai.region AND master.principal = ai.principal AND master.associate = ai.associate AND master.chain = ai.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, standard_sic, outlet, file_name, merch_index_actual_change_date FROM transformed_layer.uk_mmidxsq_idx WHERE current_ind = '0' AND CAST( outlet AS int64) = 0 AND corporate = '052') idx ON master.merchant_number = idx.merchant_number AND master.corporate = idx.corporate AND master.region = idx.region AND master.principal = idx.principal AND master.associate = idx.associate AND master.chain = idx.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, (CASE WHEN REGEXP_REPLACE(telephone_nbr1, r'[^0-9]', '') = '' THEN NULL ELSE REGEXP_REPLACE(telephone_nbr1, r'[^0-9]', '') END) AS telephone_nbr1, outlet, file_name, ytd_activity_totals_change_date, REGEXP_REPLACE(service_rep, r'[^a-zA-Z0-9]', '') AS service_rep FROM transformed_layer.uk_mmoffsq_officer WHERE current_ind = '0' AND outlet = 0 AND corporate = '052') officer ON master.merchant_number = officer.merchant_number AND master.corporate = officer.corporate AND master.region = officer.region AND master.principal = officer.principal AND master.associate = officer.associate AND master.chain = officer.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, cd_c4, cd_b4, file_name, user_detail_update_dt FROM transformed_layer.uk_mmusesq_user_info WHERE current_ind = '0' AND corporate = '052') ui ON master.merchant_number = ui.merchant_number AND master.corporate = ui.corporate AND master.region = ui.region AND master.principal = ui.principal AND master.associate = ui.associate AND master.chain = ui.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, address, seqn, file_name, email_address_change_date FROM transformed_layer.uk_mmemlsq_email WHERE current_ind = '0' AND seqn = '1' AND corporate = '052') email ON master.merchant_number = email.merchant_number AND master.corporate = email.corporate AND master.region = email.region AND master.principal = email.principal AND master.associate = email.associate AND master.chain = email.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, region, principal, associate, chain, current_ind, address, seqn, actual_update_date_time, file_name FROM uk_mmwebsq_web_temp WHERE current_ind = '0') web ON master.merchant_number = web.merchant_number AND master.corporate = web.corporate AND master.region = web.region AND master.principal = web.principal AND master.associate = web.associate AND master.chain = web.chain LEFT JOIN ( SELECT DISTINCT own.merchant_number, own.corporate, own.region, own.principal, own.associate, own.chain, owna.additional_owner_add_chng_dt, owna.file_name, owna.file_name, (CASE WHEN (REGEXP_REPLACE( UPPER(owna.address1), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) = '') THEN NULL WHEN REGEXP_CONTAINS(UPPER(owna.address1), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?') THEN REGEXP_REPLACE( UPPER(owna.address1), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) ELSE UPPER(owna.address1) END ) AS address1, (CASE WHEN (REGEXP_REPLACE( UPPER(owna.address2), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) = '') THEN NULL WHEN REGEXP_CONTAINS(UPPER(owna.address2), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?') THEN REGEXP_REPLACE( UPPER(owna.address2), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) ELSE UPPER(owna.address2) END ) AS address2, (CASE WHEN (REGEXP_REPLACE( UPPER(owna.address3), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) = '')  THEN NULL WHEN REGEXP_CONTAINS(UPPER(owna.address3), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?') THEN REGEXP_REPLACE( UPPER(owna.address3), r'P[^a-zA-Z]?O\\s*[^a-zA-Z0-9]*\\s*B[^a-zA-Z]?O[^a-zA-Z]?X[^a-zA-Z\\s]?\\s*[^a-zA-Z0-9]*\\s*[^a-zA-Z\\s]*\\s*[^a-zA-Z0-9]*\\s?', '' ) ELSE UPPER(owna.address3) END ) AS address3, owna.city, owna.postal_code, owna.state_ctry, own.current_ind, own.name, own.primary_id FROM ( SELECT ownsq.*, SENSITIVE.primary_id FROM ( SELECT DISTINCT corporate, region, principal, associate, chain, name, hash_key_value, merchant_number, current_ind, seq_nbr FROM transformed_layer.uk_mmownsq_owner ) ownsq LEFT JOIN ( SELECT DISTINCT primary_id, hash_key_value FROM transformed_layer_sensitive.uk_mmownsq_owner) SENSITIVE ON ownsq.hash_key_value=SENSITIVE.hash_key_value ) own INNER JOIN ( SELECT DISTINCT merch_n, current_ind, seq_n, file_name, additional_owner_add_chng_dt, address1, address2, address3, city, state_ctry, postal_code FROM transformed_layer.uk_mmaoweu_addl_owner_address) owna ON own.merchant_number = owna.merch_n AND own.current_ind = '0' AND owna.current_ind = '0' AND own.seq_nbr = CAST(owna.seq_n AS int64) AND own.seq_nbr = 1 AND own.corporate = '052') owner ON master.merchant_number = owner.merchant_number AND master.corporate = owner.corporate AND master.region = owner.region AND master.principal = owner.principal AND master.associate = owner.associate AND master.chain = owner.chain AND owner.current_ind = '0' LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, associate, chain, region, principal, current_ind, plate_typ, outlet, file_name, metal_plate_type_chng_dt, amex_optblue_se_num FROM transformed_layer.uk_mmmpasq_metal_plate WHERE current_ind = '0' AND CAST(outlet AS int64) = 0 AND plate_typ = '1' AND corporate = '052') plate ON master.merchant_number = plate.merchant_number AND master.corporate = plate.corporate AND master.region = plate.region AND master.principal = plate.principal AND master.associate = plate.associate AND master.chain = plate.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, associate, chain, region, principal, current_ind, outlet, card_typ, service_level, service_lvl_chng_date, pre_service_level, dw_update_date_time, file_name FROM transformed_layer.uk_mmcslsq_card_service WHERE CAST(outlet AS int64) = 0 AND card_typ='30' AND corporate = '052') csl ON master.merchant_number = csl.merchant_number AND master.corporate = csl.corporate AND master.region = csl.region AND master.principal = csl.principal AND master.associate = csl.associate AND master.chain = csl.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, associate, chain, region, principal, current_ind, outlet, dt_closed, dt_opened FROM transformed_layer.uk_mmintsq_idx_integrity WHERE current_ind = '0' AND outlet = 0 AND corporate = '052') idxint ON master.merchant_number = idxint.merchant_number AND master.corporate = idxint.corporate AND master.region = idxint.region AND master.principal = idxint.principal AND master.associate = idxint.associate AND master.chain = idxint.chain LEFT JOIN ( SELECT DISTINCT merchant_number, corporate, associate, chain, region, principal, current_ind, usr_def_fld2 FROM transformed_layer.uk_mmfrdsq_fraud WHERE current_ind = '0' AND CAST(outlet AS int64) = 0 AND corporate = '052') fraud ON master.merchant_number = fraud.merchant_number AND master.corporate = fraud.corporate AND master.region = fraud.region AND master.principal = fraud.principal AND master.associate = fraud.associate AND master.chain = fraud.chain LEFT JOIN ( SELECT DISTINCT fnd_non_sensitive.acct_ind, fnd_non_sensitive.merchant_number, LTRIM(fnd_non_sensitive.transit_nbr, '0') AS transit_nbr, fnd_non_sensitive.file_name, fnd_non_sensitive.supplemental_funding_change_date FROM ( SELECT DISTINCT file_name, supplemental_funding_change_date, merchant_number, acct_ind, hash_key_value, etlbatchid, transit_nbr FROM transformed_layer.uk_mmfndeu_supplement_funding WHERE acct_ind='GBP1' AND transit_nbr IS NOT NULL AND TRIM( transit_nbr)!='') fnd_non_sensitive LEFT JOIN ( SELECT DISTINCT hash_key_value, etlbatchid FROM trusted_layer_sensitive.uk_mmfndeu_supplement_funding) fnd_sensitive ON fnd_sensitive.hash_key_value=fnd_non_sensitive.hash_key_value AND CAST(fnd_sensitive.etlbatchid AS int64)=fnd_non_sensitive.etlbatchid ) fnd ON TRIM(master.merchant_number) = TRIM(fnd.merchant_number) WHERE LTRIM(TRIM(master.merchant_number),'0') IN ( SELECT DISTINCT merchant_number FROM ( SELECT LTRIM(TRIM(seller_id),'0') AS merchant_number FROM transformed_layer.amex_uk_smf_dtl_response WHERE resend_flg='Y' UNION ALL SELECT LTRIM(TRIM(seller_id),'0') AS merchant_number FROM transformed_layer.amex_uk_smf_dt2_response WHERE resend_flg='Y' ))) SELECT UPPER(RPAD(TRIM(amex_optblue_se_num), 10, ' ')) AS key, UPPER(TRIM('DTL')) AS dtl_record_type, UPPER(RPAD(LPAD(TRIM(IFNULL(merchant_number, '')), 15, '0'), 20, ' ')) AS merchant_number, UPPER(RPAD(TRIM(IFNULL(company_name, '')), 60, ' ')) AS seller_legal_name, UPPER(RPAD(TRIM(IFNULL(dba_name, '')), 60, ' ')) AS seller_dba_name, UPPER(RPAD(TRIM(IFNULL(moss.infoValue, '')), 15, ' ')) AS seller_business_registration_number_rfc, (CASE WHEN LENGTH(IFNULL(SAFE_CAST(standard_sic AS STRING), '')) > 4 THEN SAFE_CAST(SUBSTR(IFNULL(SAFE_CAST(standard_sic AS STRING), ''), 1, 4) AS STRING) ELSE SAFE_CAST(LPAD(IFNULL(SAFE_CAST(standard_sic AS STRING), ''), 4, '0') AS STRING) END ) AS seller_mcc, UPPER(RPAD(TRIM(IFNULL(ai_address1, '')), 40, ' ')) AS seller_street_address_1, UPPER(RPAD(TRIM(IFNULL(ai_city, '')), 40, ' ')) AS seller_city_name, REPEAT(' ', 6) AS seller_region_code_state, UPPER(RPAD(TRIM(IFNULL(ai_postal_cd, '')), 15, ' ')) AS seller_postal_code, UPPER(RPAD(TRIM(IFNULL(num_country_code, '')), 2, ' ')) AS seller_country_code, UPPER((CASE WHEN LENGTH(TRIM(IFNULL(telephone_nbr1, ' '))) > 24 THEN RPAD(SUBSTR(TRIM(IFNULL(telephone_nbr1, ' ')),-24),24, ' ') ELSE RPAD(TRIM(IFNULL(telephone_nbr1, ' ')), 24, ' ') END )) AS seller_business_phone_number, UPPER((CASE WHEN (SUBSTRING(TRIM(IFNULL(cd_c4, '')),1,1) = 'Y' OR (SUBSTRING(TRIM(IFNULL(cd_c4, '')),1,1)='N' AND TRIM(IFNULL(email_seqn, '')) = '1')) THEN RPAD(TRIM(IFNULL(email_address, '')), 254,' ') ELSE RPAD('', 254,' ') END )) AS seller_email_address, UPPER((CASE WHEN (CASE WHEN TRIM(IFNULL(cd_b4, '')) IN ('APX', 'APXP', 'APXE', 'CPX', 'CPXE', 'CPXP', 'IPG', 'IPSP') THEN 'Y' ELSE 'N' END ) = 'Y' AND LENGTH(TRIM(IFNULL(web_address, ''))) >= 254 THEN SUBSTRING(TRIM(IFNULL(web_address, '')),1,254) ELSE RPAD(TRIM(IFNULL(web_address, '')), 254, ' ') END )) AS seller_url, UPPER(TRIM('GBP')) AS seller_currency_code, UPPER(RPAD( LEFT( IF ( ARRAY_LENGTH(SPLIT(TRIM(name), ' ')) = 1, TRIM(name), ARRAY_TO_STRING(ARRAY( SELECT SPLIT(TRIM(name), ' ')[ OFFSET (i)] FROM UNNEST(GENERATE_ARRAY(0, ARRAY_LENGTH(SPLIT(TRIM(name), ' ')) - 2)) AS i ), ' ') ), 20 ), 20, ' ' )) AS authorized_signer_first_name, UPPER(RPAD( LEFT( IF ( ARRAY_LENGTH(SPLIT(TRIM(name), ' ')) = 1, '', ARRAY_TO_STRING( ARRAY( SELECT SPLIT(TRIM(name), ' ')[ OFFSET (ARRAY_LENGTH(SPLIT(TRIM(name), ' ')) - 1)] ), ' ' ) ), 20 ), 20, ' ' )) AS authorized_signer_last_name, UPPER(TRIM('EN')) AS language, REPEAT(' ', 1) AS jcb_indicator, REPEAT(' ', 20) AS significant_beneficial_owner_1_first_name, REPEAT(' ', 20) AS significant_beneficial_owner_1_last_name, REPEAT(' ', 30) AS significant_beneficial_owner_1_identification_number_ssn, REPEAT(' ', 8) AS significant_beneficial_owner_1_date_of_birth, REPEAT(' ', 40) AS significant_beneficial_owner_1_street_address_1, REPEAT(' ', 40) AS significant_beneficial_owner_1_city_name, REPEAT(' ', 6) AS significant_beneficial_owner_1_region_code_state, REPEAT(' ', 15) AS significant_beneficial_owner_1_postal_code, REPEAT(' ', 2) AS significant_beneficial_owner_1_country_code, UPPER(TRIM('N')) AS marketing_indicator, REPEAT(' ', 1) AS ownership_type_indicator, REPEAT(' ', 1) AS seller_transacting_indicator, REPEAT(' ', 1) AS se_detail_status_code, REPEAT(' ', 8) AS se_detail_status_change_date, RPAD(TRIM(IFNULL(ai_address2, '')), 40, ' ') AS seller_street_address_2, RPAD(TRIM(IFNULL(ai_address3, '')), 40, ' ') AS seller_street_address_3, REPEAT(' ', 40) AS seller_street_address_4, REPEAT(' ', 40) AS seller_street_address_5, REPEAT(' ', 20) AS authorized_signer_title, REPEAT(' ', 40) AS significant_beneficial_owner_1_street_address_2, REPEAT(' ', 40) AS significant_beneficial_owner_1_street_address_3, REPEAT(' ', 40) AS significant_beneficial_owner_1_street_address_4, REPEAT(' ', 40) AS significant_beneficial_owner_1_street_address_5, REPEAT(' ', 61) AS filler10, REPEAT(' ', 18) AS client_defined, REPEAT(' ', 1) AS record_type_error_flag, REPEAT(' ', 1) AS record_number_error_flag, REPEAT(' ', 1) AS seller_id_error_flag, REPEAT(' ', 1) AS seller_legal_name_error_flag, REPEAT(' ', 1) AS seller_dba_name_error_flag, REPEAT(' ', 1) AS seller_business_registration_number_rfc_error_flag, REPEAT(' ', 1) AS seller_mcc_error_flag, REPEAT(' ', 1) AS seller_street_address_error_flag, REPEAT(' ', 1) AS seller_city_name_error_flag, REPEAT(' ', 1) AS seller_state_location_region_code_error_flag, REPEAT(' ', 1) AS seller_postal_code_location_postal_code_error_flag, REPEAT(' ', 1) AS seller_country_code_error_flag, REPEAT(' ', 1) AS seller_business_phone_number_error_flag, REPEAT(' ', 1) AS seller_email_address_error_flag, REPEAT(' ', 1) AS seller_url_error_flag, REPEAT(' ', 1) AS seller_currency_code_error_flag, REPEAT(' ', 1) AS authorized_signer_first_name_error_flag, REPEAT(' ', 1) AS authorized_signer_last_name_error_flag, REPEAT(' ', 1) AS language_error_flag, REPEAT(' ', 1) AS jcb_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_first_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_last_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_identification_number_ssn_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_date_of_birth_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_street_address_1_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_city_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_region_code_state_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_postal_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_country_code_error_flag, REPEAT(' ', 1) AS marketing_indicator_error_flag, REPEAT(' ', 1) AS ownership_type_error_flag, REPEAT(' ', 1) AS seller_transacting_indicator_error_flag, REPEAT(' ', 1) AS se_detail_status_code_error_flag, REPEAT(' ', 1) AS se_detail_status_change_date_error_flag, REPEAT(' ', 1) AS seller_street_address_2_error_flag, REPEAT(' ', 1) AS seller_street_address_3_error_flag, REPEAT(' ', 1) AS seller_street_address_4_error_flag, REPEAT(' ', 1) AS seller_street_address_5_error_flag, REPEAT(' ', 1) AS authorized_signer_title_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_street_address_2_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_street_address_3_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_street_address_4_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_1_street_address_5_error_flag, REPEAT(' ', 1) AS client_defined_error_flag, REPEAT(' ', 1192) AS filler11, REPEAT(' ', 52) AS record_reject_identifier, UPPER(TRIM('DT2')) AS dt2_record_type, REPEAT(' ',30) AS authorized_signer_identification_number, (CASE WHEN LENGTH(TRIM(primary_id)) = 8 AND (primary_id IS NOT NULL OR primary_id <> '') AND SAFE.PARSE_DATE('%d%m%Y', TRIM(primary_id)) IS NOT NULL AND SAFE_CAST(SUBSTR(TRIM(primary_id), 5, 4) AS INT64) >= 1000 AND SAFE_CAST(SUBSTR(TRIM(primary_id), 5, 4) AS INT64) <= EXTRACT(YEAR FROM CURRENT_DATE) AND NOT REGEXP_CONTAINS(TRIM(primary_id), '(^111111111$)|(^abcd19342$)|(^333333333$)|(^444444444$)|(^555555555$)|(^666666666$)|(^777777777$)|(^888888888$)|(^999999999$)') AND NOT REGEXP_CONTAINS(primary_id, '[A-Za-z]') THEN LPAD(TRIM(IFNULL(FORMAT_DATE('%Y%m%d', SAFE.PARSE_DATE('%d%m%Y', TRIM(primary_id))), '')), 8, '0') ELSE REPEAT('0' , 8) END ) AS authorized_signer_date_of_birth, UPPER(RPAD(TRIM(IFNULL(owner_address1, '')), 40, ' ')) AS authorized_signer_street_address_1, UPPER(RPAD(TRIM(IFNULL(owner_address2, '')), 40, ' ')) AS authorized_signer_street_address_2, UPPER(RPAD(TRIM(IFNULL(owner_address3, '')), 40, ' ')) AS authorized_signer_street_address_3, REPEAT(' ', 40) AS authorized_signer_street_address_4, REPEAT(' ', 40) AS authorized_signer_street_address_5, UPPER(RPAD(TRIM(IFNULL(owner_city, '')), 40, ' ')) AS authorized_signer_city_name, UPPER(RPAD(TRIM(IFNULL(state_ctry, '')), 6, ' ')) AS authorized_signer_region_code, UPPER(RPAD(TRIM(IFNULL(owner_postal_code, '')), 15, ' ')) AS authorized_signer_postal_code, UPPER(TRIM('GB')) AS authorized_signer_country_code, REPEAT(' ', 20) AS significant_beneficial_owner_2_first_name, REPEAT(' ', 20) AS significant_beneficial_owner_2_last_name, REPEAT(' ', 30) AS significant_beneficial_owner_2_identification_number, REPEAT(' ', 8) AS significant_beneficial_owner_2_date_of_birth, REPEAT(' ', 40) AS significant_beneficial_owner_2_street_address_1, REPEAT(' ', 40) AS significant_beneficial_owner_2_street_address_2, REPEAT(' ', 40) AS significant_beneficial_owner_2_street_address_3, REPEAT(' ', 40) AS significant_beneficial_owner_2_street_address_4, REPEAT(' ', 40) AS significant_beneficial_owner_2_street_address_5, REPEAT(' ', 40) AS significant_beneficial_owner_2_city_name, REPEAT(' ', 6) AS significant_beneficial_owner_2_region_code_state, REPEAT(' ', 15) AS significant_beneficial_owner_2_postal_code, REPEAT(' ', 2) AS significant_beneficial_owner_2_country_code, REPEAT(' ', 20) AS significant_beneficial_owner_3_first_name, REPEAT(' ', 20) AS significant_beneficial_owner_3_last_name, REPEAT(' ', 30) AS significant_beneficial_owner_3_identification_number, REPEAT(' ', 8) AS significant_beneficial_owner_3_date_of_birth, REPEAT(' ', 40) AS significant_beneficial_owner_3_street_address_1, REPEAT(' ', 40) AS significant_beneficial_owner_3_street_address_2, REPEAT(' ', 40) AS significant_beneficial_owner_3_street_address_3, REPEAT(' ', 40) AS significant_beneficial_owner_3_street_address_4, REPEAT(' ', 40) AS significant_beneficial_owner_3_street_address_5, REPEAT(' ', 40) AS significant_beneficial_owner_3_city_name, REPEAT(' ', 6) AS significant_beneficial_owner_3_region_code_state, REPEAT(' ', 15) AS significant_beneifical_owner_3_postal_code, REPEAT(' ', 2) AS significant_beneficial_owner_3_country_code, REPEAT(' ', 20) AS significant_beneficial_owner_4_first_name, REPEAT(' ', 20) AS significant_beneficial_owner_4_last_name, REPEAT(' ', 30) AS significant_beneficial_owner_4_identification_number, REPEAT(' ', 8) AS significant_beneficial_owner_4_date_of_birth, REPEAT(' ', 40) AS significant_beneficial_owner_4_street_address_1, REPEAT(' ', 40) AS significant_beneficial_owner_4_street_address_2, REPEAT(' ', 40) AS significant_beneficial_owner_4_street_address_3, REPEAT(' ', 40) AS significant_beneficial_owner_4_street_address_4, REPEAT(' ', 40) AS significant_beneficial_owner_4_street_address_5, REPEAT(' ', 40) AS significant_beneficial_owner_4_city_name, REPEAT(' ', 6) AS significant_beneficial_owner_4_region_code_state, REPEAT(' ', 15) AS significant_beneficial_owner_4_postal_code, REPEAT(' ', 2) AS significant_beneficial_owner_4_country_code, TRIM('DS') AS sales_channel_indicator, RPAD(TRIM('Direct Sales Channel'), 25, ' ') AS sales_channel_name, UPPER( CASE WHEN (TRIM(service_rep) IS NULL OR TRIM(service_rep) = '') THEN REPEAT(' ', 25) WHEN LENGTH(TRIM( service_rep )) < 21 THEN RPAD(CONCAT('GPUK', TRIM(IFNULL(service_rep, ''))), 25, ' ') ELSE CONCAT('GPUK', SUBSTR(TRIM( service_rep ), 1, 21)) END) AS sales_representative_id, REPEAT(' ', 25) AS iso_registration_number, REPEAT(' ', 923) AS dt2_filler1, REPEAT(' ', 2) AS sellers_status, (CASE WHEN (TRIM(cd_c4) IS NULL OR TRIM(cd_c4) = '') THEN REPEAT(' ' , 8) WHEN TRIM(IFNULL(SUBSTRING(TRIM(cd_c4),2,2), '')) = '51' THEN RPAD(IFNULL(FORMAT_DATE('%C%y%m%d', dt_opened), ''), 8, ' ') ELSE REPEAT(' ' , 8) END ) AS sellers_start_date, REPEAT(' ', 8) AS sellers_termination_date, REPEAT(' ', 16) AS sellers_charge_volume, REPEAT(' ', 8) AS sellers_transaction_count, REPEAT(' ', 8) AS sellers_chargeback_count, REPEAT(' ', 16) AS sellers_chargeback_amount, REPEAT(' ', 200) AS dt2_filler2, REPEAT(' ', 1) AS dt2_record_type_error_flag, REPEAT(' ', 1) AS dt2_record_number_error_flag, REPEAT(' ', 1) AS dt2_seller_id_error_flag, REPEAT(' ', 1) AS authorized_signer_identification_number_error_flag, REPEAT(' ', 1) AS authorized_signer_date_of_birth_error_flag, REPEAT(' ', 1) AS authorized_signer_street_address_1_error_flag, REPEAT(' ', 1) AS authorized_signer_street_address_2_error_flag, REPEAT(' ', 1) AS authorized_signer_street_address_3_error_flag, REPEAT(' ', 1) AS authorized_signer_street_address_4_error_flag, REPEAT(' ', 1) AS authorized_signer_street_address_5_error_flag, REPEAT(' ', 1) AS authorized_signer_city_name_error_flag, REPEAT(' ', 1) AS authorized_signer_region_code_error_flag, REPEAT(' ', 1) AS authorized_signer_postal_code_error_flag, REPEAT(' ', 1) AS authorized_signer_country_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_first_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_last_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_identification_number_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_date_of_birth_error_flag, REPEAT(' ', 1) AS significant_benifical_owner_2_street_address_1_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_street_address_2_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_street_address_3_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_street_address_4_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_street_address_5_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_city_name_error_flag, REPEAT(' ', 1) AS significantbeneficial_owner_2_region_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_postal_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_2_country_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_first_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_last_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_identification_number_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_date_of_birth_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_street_address_1_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_street_address_2_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_street_address_3_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_street_address_4_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_street_address_5_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_city_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_region_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_postal_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_3_country_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_first_name_error_flag, REPEAT(' ', 1) AS significant_beneficialowner_4_last_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_identification_number_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_date_of_birth_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_street_address_1_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_street_address_2_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_street_address_3_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_street_address_4_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_street_address_5_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_city_name_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_region_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_postal_code_error_flag, REPEAT(' ', 1) AS significant_beneficial_owner_4_country_code_error_flag, REPEAT(' ', 1) AS sales_channel_indicator_error_flag, REPEAT(' ', 1) AS sales_channel_name_error_flag, REPEAT(' ', 1) AS sales_representative_id_error_flag, REPEAT(' ', 1) AS iso_registration_number_error_flag, REPEAT(' ', 46) AS dt2_filler3, REPEAT(' ', 1) AS sellers_status_error_flag, REPEAT(' ', 1) AS sellers_start_date_error_flag, REPEAT(' ', 1) AS sellers_termination_date_error_flag, REPEAT(' ', 1) AS sellers_charge_volume_error_flag, REPEAT(' ', 1) AS sellers_transaction_count_error_flag, REPEAT(' ', 1) AS sellers_chargeback_count_error_flag, REPEAT(' ', 1) AS sellers_chargeback_amount_error_flag, REPEAT(' ', 20) AS dt2_filler4 FROM cte_dtl_dt2_response_data adhoc LEFT JOIN cte_moss_data moss ON TRIM(adhoc.merchant_number) = TRIM(moss.merchantid) ORDER BY adhoc.merchant_number) SELECT * EXCEPT(rn) FROM ( SELECT *, ROW_NUMBER() OVER (PARTITION BY LTRIM(TRIM(merchant_number), '0') ORDER BY se_detail_status_code DESC) AS rn FROM ( SELECT * FROM cte_dtl_n_dt2_today_data UNION DISTINCT SELECT * FROM cte_DTL_DT2_yesterday_response_data)) WHERE rn = 1";

    public static final String NO_DATA_HEADER_PART_1 = "HDR00000001";

    public static final String NO_DATA_HEADER_PART_2 = "STEVE SMITH";

    public static final String NO_DATA_HEADER_PART_3 = "   GB     01";

    // GetConfig && UpdateAudit
    public static final String URL = "Url";
    public static final String USERNAME = "UserName";
    public static final String PASSWORD = "Password";
    public static final String PROJECT = "Project";
    public static final String APP_CONFIG_DELIMITER = Pattern.quote("*");

}
